import"./DsnmJJEf.js";import"./8zndd0xi.js";import{f as S,s as n,a as z,b as I,d as s,r as a,n as D}from"./E9AOERj2.js";import{h as t}from"./Cc2oKZLy.js";const d={title:"Plugin System",description:"Plugin system for extending functionality with dynamic component loading, security validation, custom UI components, and data sources."},{title:L,description:U}=d;var R=S('<h2>Table of Contents</h2> <ul><li><a href="#overview">Overview</a></li> <li><a href="#plugin-architecture">Plugin Architecture</a></li> <li><a href="#security-model">Security Model</a></li> <li><a href="#plugin-development">Plugin Development</a></li> <li><a href="#configuration">Configuration</a></li> <li><a href="#examples">Examples</a></li> <li><a href="#best-practices">Best Practices</a></li></ul> <h2>Overview</h2> <p>The BoxMux plugin system enables:</p> <ul><li><strong>Dynamic Component Loading</strong>: Load custom components at runtime using <code>libloading</code></li> <li><strong>Security Validation</strong>: Permission-based access control with manifest validation</li> <li><strong>Fallback System</strong>: Graceful fallback to mock implementations for development/testing</li> <li><strong>Manifest Parsing</strong>: TOML-based plugin manifests with dependency management</li> <li><strong>Type Safety</strong>: Type-safe plugin interfaces with Rustâ€™s type system</li></ul> <h3>Key Features</h3> <ul><li><strong>Permission-based Security</strong>: Plugins declare required permissions (filesystem, network, process, environment)</li> <li><strong>Sandbox Execution</strong>: Plugins run in controlled environments with resource limits</li> <li><strong>Dynamic Library Loading</strong>: Real .so/.dll plugin files loaded at runtime</li> <li><strong>Manifest Validation</strong>: Plugin manifests validated before loading</li> <li><strong>Component Registry</strong>: Central registry managing loaded plugins with type-based lookup</li> <li><strong>Fallback Rendering</strong>: Automatic fallback to mock implementations when plugins fail to load</li></ul> <h2>Plugin Architecture</h2> <h3>Plugin Lifecycle</h3> <ol><li><strong>Manifest Discovery</strong>: BoxMux scans for plugin manifest files (<code>.toml</code> format)</li> <li><strong>Manifest Validation</strong>: Validates plugin metadata, dependencies, and permissions</li> <li><strong>Security Check</strong>: Verifies requested permissions against security policy</li> <li><strong>Dynamic Loading</strong>: Attempts to load plugin shared library using <code>libloading</code></li> <li><strong>Interface Binding</strong>: Binds plugin functions to BoxMux plugin interface</li> <li><strong>Registration</strong>: Registers plugin in component registry for use by boxes</li> <li><strong>Fallback Handling</strong>: Falls back to mock implementation if loading fails</li></ol> <h3>Component Types</h3> <p>The plugin system supports various component types:</p> <ul><li><strong>Data Visualizers</strong>: Custom chart types and visualization components</li> <li><strong>Data Sources</strong>: Custom data fetching and processing components</li> <li><strong>UI Components</strong>: Custom box types and interactive elements</li> <li><strong>Processors</strong>: Data transformation and analysis components</li> <li><strong>Integrations</strong>: External system integrations and API connectors</li></ul> <h2>Security Model</h2> <h3>Permission System</h3> <p>Plugins must declare required permissions in their manifest:</p> <h4>Available Permissions</h4> <ul><li><code>filesystem_read</code>: Read access to file system</li> <li><code>filesystem_write</code>: Write access to file system</li> <li><code>network_access</code>: Network communication access</li> <li><code>process_spawn</code>: Ability to spawn child processes</li> <li><code>environment_access</code>: Access to environment variables</li> <li><code>system_info</code>: Access to system information APIs</li></ul> <h4>Permission Validation</h4> <pre class="language-toml"><!></pre> <h3>Security Manager</h3> <p>The <code>PluginSecurityManager</code> validates permissions and enforces security policies:</p> <ul><li><strong>Permission Checking</strong>: Validates plugin permissions against declared requirements</li> <li><strong>Resource Limits</strong>: Enforces memory, CPU, and time limits</li> <li><strong>Sandbox Isolation</strong>: Isolates plugin execution from main application</li> <li><strong>Access Control</strong>: Controls plugin access to system resources</li></ul> <h2>Plugin Development</h2> <h3>Plugin Interface</h3> <p>Plugins must implement the core plugin interface:</p> <pre class="language-rust"><!></pre> <h3>Plugin Manifest</h3> <p>Each plugin requires a TOML manifest file:</p> <pre class="language-toml"><!></pre> <h3>Plugin Implementation Example</h3> <pre class="language-rust"><!></pre> <h2>Configuration</h2> <h3>Box Plugin Configuration</h3> <p>Use plugins in box configurations:</p> <pre class="language-yaml"><!></pre> <h3>Plugin Registry Configuration</h3> <p>Configure plugin discovery and loading:</p> <pre class="language-yaml"><!></pre> <h2>Examples</h2> <h3>Data Visualization Plugin</h3> <pre class="language-yaml"><!></pre> <h3>External Integration Plugin</h3> <pre class="language-yaml"><!></pre> <h3>Custom Data Processor Plugin</h3> <pre class="language-yaml"><!></pre> <h3>Development Plugin (Mock Fallback)</h3> <pre class="language-yaml"><!></pre> <h2>Best Practices</h2> <h3>Plugin Development</h3> <ol><li><strong>Clear Interfaces</strong>: Design clean, well-documented plugin interfaces</li> <li><strong>Error Handling</strong>: Implement comprehensive error handling and recovery</li> <li><strong>Resource Management</strong>: Properly manage memory and system resources</li> <li><strong>Testing</strong>: Include comprehensive tests for plugin functionality</li> <li><strong>Documentation</strong>: Provide clear documentation and examples</li></ol> <h3>Security Considerations</h3> <ol><li><strong>Minimal Permissions</strong>: Request only necessary permissions</li> <li><strong>Input Validation</strong>: Validate all input data and configuration</li> <li><strong>Sandbox Isolation</strong>: Use sandbox mode for untrusted plugins</li> <li><strong>Regular Updates</strong>: Keep plugins updated with security patches</li> <li><strong>Code Review</strong>: Review plugin code for security vulnerabilities</li></ol> <h3>Configuration Management</h3> <ol><li><strong>Schema Validation</strong>: Use JSON schemas for plugin configuration validation</li> <li><strong>Default Values</strong>: Provide sensible defaults for plugin configuration</li> <li><strong>Environment Variables</strong>: Support environment-based configuration</li> <li><strong>Hot Reloading</strong>: Design plugins to support configuration updates</li> <li><strong>Fallback Strategies</strong>: Implement graceful fallback for plugin failures</li></ol> <h3>Performance Optimization</h3> <ol><li><strong>Lazy Loading</strong>: Load plugins only when needed</li> <li><strong>Caching</strong>: Cache plugin results where appropriate</li> <li><strong>Resource Limits</strong>: Set appropriate resource limits for plugins</li> <li><strong>Profiling</strong>: Profile plugin performance and optimize bottlenecks</li> <li><strong>Memory Management</strong>: Monitor and optimize memory usage</li></ol> <h3>Development Workflow</h3> <ol><li><strong>Mock Development</strong>: Use mock implementations during development</li> <li><strong>Incremental Testing</strong>: Test plugins incrementally with real data</li> <li><strong>Integration Testing</strong>: Test plugin integration with BoxMux</li> <li><strong>Performance Testing</strong>: Verify plugin performance under load</li> <li><strong>Security Testing</strong>: Test plugin security and permission handling</li></ol> <h3>Plugin Distribution</h3> <ol><li><strong>Package Management</strong>: Use proper package management for plugin distribution</li> <li><strong>Version Compatibility</strong>: Maintain backward compatibility where possible</li> <li><strong>Dependency Management</strong>: Clearly document and manage dependencies</li> <li><strong>Installation Scripts</strong>: Provide easy installation and setup scripts</li> <li><strong>Update Mechanisms</strong>: Implement plugin update and migration mechanisms</li></ol> <hr/> <p>For plugin configuration reference, see <a href="configuration.md">Configuration Reference</a>.<br/> For development examples, see <a href="user-guide.md">User Guide</a>.<br/> For security guidelines, see the Security section in the main documentation.</p>',1);function A(y){var g=R(),e=n(z(g),38),f=s(e);t(f,()=>`<code class="language-toml"><span class="token comment"># plugin-manifest.toml</span>
<span class="token punctuation">[</span><span class="token table class-name">security</span><span class="token punctuation">]</span>
<span class="token key property">permissions</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>
    <span class="token string">"filesystem_read"</span><span class="token punctuation">,</span>
    <span class="token string">"network_access"</span>
<span class="token punctuation">]</span>

<span class="token key property">sandbox_enabled</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>
<span class="token key property">resource_limits</span> <span class="token punctuation">=</span> <span class="token punctuation">&#123;</span> <span class="token key property">memory</span> <span class="token punctuation">=</span> <span class="token string">"100MB"</span><span class="token punctuation">,</span> <span class="token key property">cpu_time</span> <span class="token punctuation">=</span> <span class="token string">"5s"</span> <span class="token punctuation">&#125;</span></code>`),a(e);var p=n(e,14),h=s(p);t(h,()=>`<code class="language-rust"><span class="token comment">// Plugin trait (simplified example)</span>
<span class="token keyword">pub</span> <span class="token keyword">trait</span> <span class="token type-definition class-name">BoxMuxPlugin</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">get_name</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">;</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">get_version</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">&amp;</span><span class="token keyword">str</span><span class="token punctuation">;</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">render</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> config<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">PluginConfig</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">PluginError</span><span class="token operator">></span><span class="token punctuation">;</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">update</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">PluginError</span><span class="token operator">></span><span class="token punctuation">;</span>
<span class="token punctuation">&#125;</span></code>`),a(p);var o=n(p,6),_=s(o);t(_,()=>`<code class="language-toml"><span class="token comment"># example-plugin.toml</span>
<span class="token punctuation">[</span><span class="token table class-name">plugin</span><span class="token punctuation">]</span>
<span class="token key property">name</span> <span class="token punctuation">=</span> <span class="token string">"metrics_visualizer"</span>
<span class="token key property">version</span> <span class="token punctuation">=</span> <span class="token string">"1.0.0"</span>
<span class="token key property">description</span> <span class="token punctuation">=</span> <span class="token string">"Advanced metrics visualization plugin"</span>
<span class="token key property">author</span> <span class="token punctuation">=</span> <span class="token string">"Developer Name"</span>
<span class="token key property">license</span> <span class="token punctuation">=</span> <span class="token string">"MIT"</span>

<span class="token punctuation">[</span><span class="token table class-name">binary</span><span class="token punctuation">]</span>
<span class="token key property">path</span> <span class="token punctuation">=</span> <span class="token string">"libmetrics_visualizer.so"</span>
<span class="token key property">entry_point</span> <span class="token punctuation">=</span> <span class="token string">"create_plugin"</span>

<span class="token punctuation">[</span><span class="token table class-name">dependencies</span><span class="token punctuation">]</span>
<span class="token key property">boxmux</span> <span class="token punctuation">=</span> <span class="token string">">=0.76.0"</span>
<span class="token key property">serde</span> <span class="token punctuation">=</span> <span class="token string">"1.0"</span>

<span class="token punctuation">[</span><span class="token table class-name">security</span><span class="token punctuation">]</span>
<span class="token key property">permissions</span> <span class="token punctuation">=</span> <span class="token punctuation">[</span>
    <span class="token string">"filesystem_read"</span><span class="token punctuation">,</span>
    <span class="token string">"network_access"</span>
<span class="token punctuation">]</span>
<span class="token key property">sandbox_enabled</span> <span class="token punctuation">=</span> <span class="token boolean">true</span>

<span class="token punctuation">[</span><span class="token table class-name">config</span><span class="token punctuation">]</span>
<span class="token key property">schema</span> <span class="token punctuation">=</span> <span class="token string">"config-schema.json"</span>
<span class="token key property">default_config</span> <span class="token punctuation">=</span> <span class="token punctuation">&#123;</span> <span class="token key property">refresh_rate</span> <span class="token punctuation">=</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token key property">max_points</span> <span class="token punctuation">=</span> <span class="token number">100</span> <span class="token punctuation">&#125;</span></code>`),a(o);var l=n(o,4),b=s(l);t(b,()=>`<code class="language-rust"><span class="token comment">// libmetrics_visualizer/src/lib.rs</span>
<span class="token keyword">use</span> <span class="token namespace">boxmux_plugin_api<span class="token punctuation">::</span></span><span class="token operator">*</span><span class="token punctuation">;</span>

<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">MetricsVisualizerPlugin</span> <span class="token punctuation">&#123;</span>
    name<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
    version<span class="token punctuation">:</span> <span class="token class-name">String</span><span class="token punctuation">,</span>
<span class="token punctuation">&#125;</span>

<span class="token keyword">impl</span> <span class="token class-name">BoxMuxPlugin</span> <span class="token keyword">for</span> <span class="token class-name">MetricsVisualizerPlugin</span> <span class="token punctuation">&#123;</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">get_name</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">&amp;</span><span class="token keyword">str</span> <span class="token punctuation">&#123;</span>
        <span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span>name
    <span class="token punctuation">&#125;</span>
    
    <span class="token keyword">fn</span> <span class="token function-definition function">get_version</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token operator">&amp;</span><span class="token keyword">str</span> <span class="token punctuation">&#123;</span>
        <span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">.</span>version
    <span class="token punctuation">&#125;</span>
    
    <span class="token keyword">fn</span> <span class="token function-definition function">render</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">self</span><span class="token punctuation">,</span> config<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token class-name">PluginConfig</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">PluginError</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>
        <span class="token comment">// Custom visualization logic</span>
        <span class="token keyword">let</span> data <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">fetch_metrics</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
        <span class="token keyword">let</span> visualization <span class="token operator">=</span> <span class="token keyword">self</span><span class="token punctuation">.</span><span class="token function">create_heatmap</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>data<span class="token punctuation">)</span><span class="token operator">?</span><span class="token punctuation">;</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span>visualization<span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
    
    <span class="token keyword">fn</span> <span class="token function-definition function">update</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token keyword">mut</span> <span class="token keyword">self</span><span class="token punctuation">,</span> data<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">u8</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token class-name">Result</span><span class="token operator">&lt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">PluginError</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>
        <span class="token comment">// Update plugin state with new data</span>
        <span class="token class-name">Ok</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">&#125;</span>
<span class="token punctuation">&#125;</span>

<span class="token comment">// Plugin entry point</span>
<span class="token attribute attr-name">#[no_mangle]</span>
<span class="token keyword">pub</span> <span class="token keyword">extern</span> <span class="token string">"C"</span> <span class="token keyword">fn</span> <span class="token function-definition function">create_plugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">-></span> <span class="token class-name">Box</span><span class="token operator">&lt;</span><span class="token keyword">dyn</span> <span class="token class-name">BoxMuxPlugin</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>
    <span class="token class-name">Box</span><span class="token punctuation">::</span><span class="token function">new</span><span class="token punctuation">(</span><span class="token class-name">MetricsVisualizerPlugin</span> <span class="token punctuation">&#123;</span>
        name<span class="token punctuation">:</span> <span class="token string">"metrics_visualizer"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        version<span class="token punctuation">:</span> <span class="token string">"1.0.0"</span><span class="token punctuation">.</span><span class="token function">to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>
<span class="token punctuation">&#125;</span></code>`),a(l);var c=n(l,8),v=s(c);t(v,()=>`<code class="language-yaml"><span class="token comment"># Basic plugin usage</span>
<span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'custom_viz'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Custom Visualization'</span>
  <span class="token key atrule">plugin_type</span><span class="token punctuation">:</span> <span class="token string">'metrics_visualizer'</span>
  <span class="token key atrule">plugin_config</span><span class="token punctuation">:</span>
    <span class="token key atrule">data_source</span><span class="token punctuation">:</span> <span class="token string">'/var/log/metrics.json'</span>
    <span class="token key atrule">visualization_type</span><span class="token punctuation">:</span> <span class="token string">'heatmap'</span>
    <span class="token key atrule">refresh_rate</span><span class="token punctuation">:</span> <span class="token number">1000</span>
  <span class="token key atrule">security_permissions</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token string">'filesystem_read'</span>

<span class="token comment"># Advanced plugin configuration</span>
<span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'api_monitor'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'API Status Monitor'</span>
  <span class="token key atrule">plugin_type</span><span class="token punctuation">:</span> <span class="token string">'http_monitor'</span>
  <span class="token key atrule">plugin_config</span><span class="token punctuation">:</span>
    <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'Main API'</span>
        <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">'https://api.example.com/health'</span>
        <span class="token key atrule">timeout</span><span class="token punctuation">:</span> <span class="token number">5000</span>
        <span class="token key atrule">expected_status</span><span class="token punctuation">:</span> <span class="token number">200</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'Database API'</span>
        <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">'https://db.example.com/status'</span>
        <span class="token key atrule">timeout</span><span class="token punctuation">:</span> <span class="token number">3000</span>
        <span class="token key atrule">headers</span><span class="token punctuation">:</span>
          <span class="token key atrule">Authorization</span><span class="token punctuation">:</span> <span class="token string">'Bearer $&#123;API_TOKEN&#125;'</span>
    <span class="token key atrule">display_format</span><span class="token punctuation">:</span> <span class="token string">'status_grid'</span>
    <span class="token key atrule">alert_threshold</span><span class="token punctuation">:</span> <span class="token number">500</span>
  <span class="token key atrule">security_permissions</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token string">'network_access'</span>
    <span class="token punctuation">-</span> <span class="token string">'environment_access'</span></code>`),a(c);var i=n(c,6),w=s(i);t(w,()=>`<code class="language-yaml"><span class="token key atrule">app</span><span class="token punctuation">:</span>
  <span class="token key atrule">plugin_config</span><span class="token punctuation">:</span>
    <span class="token key atrule">plugin_directories</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">'/usr/local/lib/boxmux/plugins'</span>
      <span class="token punctuation">-</span> <span class="token string">'~/.boxmux/plugins'</span>
      <span class="token punctuation">-</span> <span class="token string">'./plugins'</span>
    <span class="token key atrule">security_policy</span><span class="token punctuation">:</span> <span class="token string">'strict'</span>  <span class="token comment"># strict, permissive, development</span>
    <span class="token key atrule">fallback_enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token key atrule">cache_enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span></code>`),a(i);var u=n(i,6),P=s(u);t(P,()=>`<code class="language-yaml"><span class="token comment"># Custom metrics dashboard</span>
<span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'metrics_dashboard'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Advanced Metrics'</span>
  <span class="token key atrule">plugin_type</span><span class="token punctuation">:</span> <span class="token string">'prometheus_visualizer'</span>
  <span class="token key atrule">plugin_config</span><span class="token punctuation">:</span>
    <span class="token key atrule">prometheus_url</span><span class="token punctuation">:</span> <span class="token string">'http://localhost:9090'</span>
    <span class="token key atrule">metrics</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'cpu_usage'</span>
        <span class="token key atrule">query</span><span class="token punctuation">:</span> <span class="token string">'rate(cpu_usage_total[5m])'</span>
        <span class="token key atrule">chart_type</span><span class="token punctuation">:</span> <span class="token string">'line'</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">'memory_usage'</span>  
        <span class="token key atrule">query</span><span class="token punctuation">:</span> <span class="token string">'memory_usage_bytes / memory_total_bytes * 100'</span>
        <span class="token key atrule">chart_type</span><span class="token punctuation">:</span> <span class="token string">'gauge'</span>
    <span class="token key atrule">refresh_interval</span><span class="token punctuation">:</span> <span class="token number">5000</span>
  <span class="token key atrule">security_permissions</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token string">'network_access'</span></code>`),a(u);var r=n(u,4),x=s(r);t(x,()=>`<code class="language-yaml"><span class="token comment"># Kubernetes cluster monitor</span>
<span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'k8s_monitor'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Kubernetes Status'</span>
  <span class="token key atrule">plugin_type</span><span class="token punctuation">:</span> <span class="token string">'kubernetes_monitor'</span>
  <span class="token key atrule">plugin_config</span><span class="token punctuation">:</span>
    <span class="token key atrule">kubeconfig</span><span class="token punctuation">:</span> <span class="token string">'~/.kube/config'</span>
    <span class="token key atrule">namespace</span><span class="token punctuation">:</span> <span class="token string">'default'</span>
    <span class="token key atrule">resources</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">'pods'</span>
      <span class="token punctuation">-</span> <span class="token string">'services'</span>
      <span class="token punctuation">-</span> <span class="token string">'deployments'</span>
    <span class="token key atrule">display_format</span><span class="token punctuation">:</span> <span class="token string">'table'</span>
  <span class="token key atrule">security_permissions</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token string">'filesystem_read'</span>
    <span class="token punctuation">-</span> <span class="token string">'network_access'</span>
    <span class="token punctuation">-</span> <span class="token string">'process_spawn'</span></code>`),a(r);var k=n(r,4),M=s(k);t(M,()=>`<code class="language-yaml"><span class="token comment"># Log analysis plugin</span>
<span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'log_analyzer'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Log Analysis'</span>
  <span class="token key atrule">plugin_type</span><span class="token punctuation">:</span> <span class="token string">'log_processor'</span>
  <span class="token key atrule">plugin_config</span><span class="token punctuation">:</span>
    <span class="token key atrule">log_files</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">'/var/log/nginx/access.log'</span>
      <span class="token punctuation">-</span> <span class="token string">'/var/log/nginx/error.log'</span>
    <span class="token key atrule">analysis_type</span><span class="token punctuation">:</span> <span class="token string">'real_time'</span>
    <span class="token key atrule">filters</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token string">'error_level >= warning'</span>
      <span class="token punctuation">-</span> <span class="token string">'response_time > 1000'</span>
    <span class="token key atrule">aggregation_window</span><span class="token punctuation">:</span> <span class="token string">'5m'</span>
  <span class="token key atrule">security_permissions</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token string">'filesystem_read'</span></code>`),a(k);var m=n(k,4),C=s(m);t(C,()=>`<code class="language-yaml"><span class="token comment"># Development plugin with fallback</span>
<span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'dev_plugin'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Development Feature'</span>
  <span class="token key atrule">plugin_type</span><span class="token punctuation">:</span> <span class="token string">'experimental_feature'</span>
  <span class="token key atrule">plugin_config</span><span class="token punctuation">:</span>
    <span class="token key atrule">feature_flag</span><span class="token punctuation">:</span> <span class="token string">'enable_new_ui'</span>
    <span class="token key atrule">mock_data</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token comment"># No security_permissions - will use mock implementation</span></code>`),a(m),D(30),I(y,g)}const F=Object.freeze(Object.defineProperty({__proto__:null,default:A,metadata:d},Symbol.toStringTag,{value:"Module"}));export{F as _};
