import"./DsnmJJEf.js";import"./8zndd0xi.js";import{f as C,s,a as T,b as P,d as n,r as a,n as B}from"./E9AOERj2.js";import{h as t}from"./Cc2oKZLy.js";const g={title:"Stream Architecture",description:"BoxMux stream-based architecture - multiple input streams, tab system, stream switching, and lifecycle management for dynamic content display"},{title:R,description:Y}=g;var M=C('<h2>Table of Contents</h2> <ul><li><a href="#overview">Overview</a></li> <li><a href="#stream-types">Stream Types</a></li> <li><a href="#tab-system">Tab System</a></li> <li><a href="#stream-switching">Stream Switching</a></li> <li><a href="#close-buttons-and-lifecycle">Close Buttons and Lifecycle</a></li> <li><a href="#practical-examples">Practical Examples</a></li> <li><a href="#advanced-usage">Advanced Usage</a></li></ul> <h2>Overview</h2> <p>BoxMux uses a <strong>stream-based architecture</strong> where every box can display content from multiple input streams. Each stream appears as a separate tab in the box title bar, allowing users to switch between different content sources within the same box.</p> <p>This architecture enables:</p> <ul><li><strong>Multiple content sources</strong> per box (base content, choice outputs, PTY sessions)</li> <li><strong>Dynamic tab creation</strong> based on active streams</li> <li><strong>Interactive stream switching</strong> by clicking tabs</li> <li><strong>Stream lifecycle management</strong> with automatic cleanup</li> <li><strong>Real-time updates</strong> from background streams</li></ul> <h2>Stream Types</h2> <h3>Content Stream</h3> <p>The default stream containing the box’s base content and script output.</p> <pre class="language-yaml"><!></pre> <h3>Choices Stream</h3> <p>Interactive menu options that appear as a separate stream.</p> <pre class="language-yaml"><!></pre> <h3>Redirected Output Streams</h3> <p>Output from choice executions in other boxes creates dedicated streams.</p> <pre class="language-yaml"><!></pre> <h3>PTY Streams</h3> <p>Interactive terminal sessions for running terminal programs.</p> <pre class="language-yaml"><!></pre> <h2>Tab System</h2> <p>Tabs are automatically generated based on available streams in each box:</p> <h3>Tab Priority and Ordering</h3> <ol><li><strong>Content Stream</strong> - Always first if present</li> <li><strong>Choices Stream</strong> - Second if present</li> <li><strong>Redirected Output Streams</strong> - Ordered by creation time</li> <li><strong>PTY Streams</strong> - Ordered by creation time</li></ol> <h3>Tab Labels</h3> <ul><li><strong>Content Stream</strong>: “Content”</li> <li><strong>Choices Stream</strong>: Uses box title or “Choices” if no title</li> <li><strong>Redirected Output</strong>: Uses choice ID (e.g., “Deploy”, “Test”)</li> <li><strong>PTY Stream</strong>: Uses box title or “PTY” if no title</li></ul> <h3>Visual Indicators</h3> <ul><li><strong>Active tab</strong>: Highlighted with different color</li> <li><strong>Background activity</strong>: Subtle indicator for streams with new content</li> <li><strong>Close buttons</strong>: × symbol on closeable streams (redirected output, PTY)</li></ul> <h2>Stream Switching</h2> <p>Users can switch between streams by clicking tabs:</p> <h3>Mouse Interaction</h3> <pre class="language-undefined"><!></pre> <h3>Keyboard Navigation</h3> <ul><li><strong>Tab</strong>: Cycle through boxes</li> <li><strong>Arrow keys</strong>: Navigate within active stream content</li> <li><strong>Mouse click</strong>: Switch streams within focused box</li></ul> <h3>Active Stream Behavior</h3> <ul><li>Only the active stream content is displayed in the box</li> <li>Scrolling and navigation apply to the active stream</li> <li>Background streams continue updating but aren’t visible</li></ul> <h2>Close Buttons and Lifecycle</h2> <h3>Closeable Streams</h3> <p>Streams that can be terminated show close buttons (×):</p> <ul><li><strong>Redirected Output Streams</strong> - From choice executions</li> <li><strong>PTY Streams</strong> - Interactive terminal sessions</li> <li><strong>Choice Execution Streams</strong> - Running processes</li> <li><strong>External Socket Streams</strong> - Socket-controlled content</li></ul> <h3>Non-closeable Streams</h3> <p>Core streams remain open:</p> <ul><li><strong>Content Streams</strong> - Base box content</li> <li><strong>Choices Streams</strong> - Menu definitions</li></ul> <h3>Stream Cleanup</h3> <p>When a stream is closed:</p> <ol><li><strong>Process termination</strong> - Associated processes are killed</li> <li><strong>Resource cleanup</strong> - File descriptors and threads cleaned up</li> <li><strong>Tab removal</strong> - Tab disappears from box title bar</li> <li><strong>Stream switching</strong> - Active stream switches to remaining stream</li></ol> <h2>Practical Examples</h2> <h3>Multi-Stream Development Box</h3> <pre class="language-yaml"><!></pre> <p><strong>Result</strong>:</p> <ul><li><code>dev_control</code> box shows [Content][Development] tabs</li> <li><code>build_output</code> box starts with [Content], adds [Build]/[Test]/[Lint] tabs as commands run</li> <li><code>terminal</code> box shows [Terminal] tab with interactive bash session</li> <li>Users can close Build/Test/Lint tabs with × button after completion</li></ul> <h3>Real-time Monitoring Setup</h3> <pre class="language-yaml"><!></pre> <p><strong>Behavior</strong>:</p> <ul><li>Users click CPU/Disk/Network choices to start monitoring streams</li> <li>Each creates a dedicated tab in the <code>metrics</code> box</li> <li>Users can switch between different metric streams using tabs</li> <li>Close buttons (×) allow stopping individual monitoring streams</li> <li><code>auto_scroll: true</code> keeps latest metrics visible</li></ul> <h2>Advanced Usage</h2> <h3>Stream Configuration Options</h3> <pre class="language-yaml"><!></pre> <h3>Stream Monitoring and Control</h3> <p>Via Socket API:</p> <pre class="language-bash"><!></pre> <h3>Error Handling</h3> <p>Streams handle failures gracefully:</p> <ul><li><strong>Process crashes</strong>: Stream shows error state, remains closeable</li> <li><strong>Script failures</strong>: Error output captured in stream</li> <li><strong>PTY failures</strong>: Automatic fallback to regular execution</li> <li><strong>Socket disconnects</strong>: Stream marked as disconnected but preserved</li></ul> <h3>Performance Considerations</h3> <ul><li><strong>Stream limits</strong>: No hard limit on streams per box</li> <li><strong>Memory usage</strong>: Each stream maintains its own buffer</li> <li><strong>Update frequency</strong>: Background streams throttled to prevent UI lag</li> <li><strong>Cleanup timing</strong>: Streams cleaned up immediately when closed</li></ul> <hr/> <p>The stream architecture provides a powerful foundation for building complex, multi-source terminal interfaces while maintaining simple YAML configuration syntax.</p>',1);function A(d){var k=M(),e=s(T(k),18),h=n(e);t(h,()=>`<code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'content_box'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'System Info'</span>
  <span class="token key atrule">content</span><span class="token punctuation">:</span> <span class="token string">'Base system information'</span>
  <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'uname -a'</span><span class="token punctuation">]</span>
  <span class="token comment"># → Creates "Content" tab</span></code>`),a(e);var o=s(e,6),y=n(o);t(y,()=>`<code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'menu_box'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Actions Menu'</span>
  <span class="token key atrule">choices</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'deploy'</span>
      <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'./deploy.sh'</span><span class="token punctuation">]</span>
    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'test'</span>
      <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'./run-tests.sh'</span><span class="token punctuation">]</span>
  <span class="token comment"># → Creates "Actions Menu" tab (uses box title)</span></code>`),a(o);var p=s(o,6),b=n(p);t(b,()=>`<code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'control_box'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Controls'</span>
  <span class="token key atrule">choices</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'deploy'</span>
      <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'./deploy.sh'</span><span class="token punctuation">]</span>
      <span class="token key atrule">redirect_output</span><span class="token punctuation">:</span> <span class="token string">'output_box'</span>  <span class="token comment"># Creates "Deploy" tab in output_box</span>

<span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'output_box'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Output Display'</span>
  <span class="token key atrule">content</span><span class="token punctuation">:</span> <span class="token string">'Waiting for operations...'</span>
  <span class="token comment"># → Shows both "Content" and "Deploy" tabs when deploy runs</span></code>`),a(p);var l=s(p,6),v=n(l);t(v,()=>`<code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'terminal_box'</span>  
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Terminal'</span>
  <span class="token key atrule">pty</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'bash'</span><span class="token punctuation">]</span>
  <span class="token comment"># → Creates "Terminal" tab with interactive shell</span></code>`),a(l);var c=s(l,24),f=n(c);t(f,()=>`<code class="language-undefined">[Content] [Deploy] [Test]
    ↑       ↑       ↑
  Click to switch active stream</code>`),a(c);var i=s(c,34),_=n(i);t(_,()=>`<code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'dev_control'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Development'</span>
  <span class="token key atrule">content</span><span class="token punctuation">:</span> <span class="token string">'Ready for development tasks'</span>
  <span class="token key atrule">choices</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'build'</span>
      <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'cargo build --release'</span><span class="token punctuation">]</span>  
      <span class="token key atrule">redirect_output</span><span class="token punctuation">:</span> <span class="token string">'build_output'</span>
    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'test'</span>
      <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'cargo test'</span><span class="token punctuation">]</span>
      <span class="token key atrule">redirect_output</span><span class="token punctuation">:</span> <span class="token string">'test_output'</span> 
    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'lint'</span>
      <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'cargo clippy'</span><span class="token punctuation">]</span>
      <span class="token key atrule">redirect_output</span><span class="token punctuation">:</span> <span class="token string">'lint_output'</span>

<span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'build_output'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Build Results'</span>
  <span class="token key atrule">content</span><span class="token punctuation">:</span> <span class="token string">'Build output will appear here...'</span>
  <span class="token comment"># Tabs: [Content] + [Build]/[Test]/[Lint] when commands run</span>

<span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'terminal'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Terminal'</span> 
  <span class="token key atrule">pty</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'bash'</span><span class="token punctuation">]</span>
  <span class="token comment"># Tab: [Terminal] with interactive shell</span></code>`),a(i);var r=s(i,8),x=n(r);t(x,()=>`<code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'monitoring'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'System Monitor'</span>
  <span class="token key atrule">content</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
    System monitoring dashboard
    Click choices to start monitoring streams</span>
  <span class="token key atrule">choices</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'cpu'</span>
      <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'top -l 0 -s 1'</span><span class="token punctuation">]</span>
      <span class="token key atrule">redirect_output</span><span class="token punctuation">:</span> <span class="token string">'metrics'</span>
      <span class="token key atrule">streaming</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'disk'</span>  
      <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'iostat 1'</span><span class="token punctuation">]</span>
      <span class="token key atrule">redirect_output</span><span class="token punctuation">:</span> <span class="token string">'metrics'</span>
      <span class="token key atrule">streaming</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'network'</span>
      <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'netstat -w 1'</span><span class="token punctuation">]</span> 
      <span class="token key atrule">redirect_output</span><span class="token punctuation">:</span> <span class="token string">'metrics'</span>
      <span class="token key atrule">streaming</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>

<span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'metrics'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Live Metrics'</span>
  <span class="token key atrule">content</span><span class="token punctuation">:</span> <span class="token string">'Select monitoring options from control panel'</span>
  <span class="token key atrule">auto_scroll</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token comment"># Tabs dynamically created: [Content] [CPU] [Disk] [Network]</span></code>`),a(r);var u=s(r,10),S=n(u);t(S,()=>`<code class="language-yaml"><span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'advanced_box'</span>
  <span class="token key atrule">title</span><span class="token punctuation">:</span> <span class="token string">'Advanced Streams'</span>
  <span class="token key atrule">content</span><span class="token punctuation">:</span> <span class="token string">'Base content'</span>
  
  <span class="token comment"># Content stream behavior</span>
  <span class="token key atrule">auto_scroll</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token comment"># Auto-scroll to bottom for new content</span>
  
  <span class="token comment"># Choice stream with streaming output</span>
  <span class="token key atrule">choices</span><span class="token punctuation">:</span>
    <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> <span class="token string">'long_process'</span>
      <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'./long-running-task.sh'</span><span class="token punctuation">]</span>
      <span class="token key atrule">streaming</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>          <span class="token comment"># Stream output line-by-line</span>
      <span class="token key atrule">redirect_output</span><span class="token punctuation">:</span> <span class="token string">'output'</span>
      
  <span class="token comment"># PTY stream configuration  </span>
  <span class="token key atrule">pty</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
  <span class="token key atrule">script</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'htop'</span><span class="token punctuation">]</span>            <span class="token comment"># Interactive process monitor</span></code>`),a(u);var m=s(u,6),w=n(m);t(w,()=>`<code class="language-bash"><span class="token comment"># List all streams for a box</span>
boxmux query-streams --box-id advanced_box

<span class="token comment"># Switch active stream  </span>
boxmux switch-stream --box-id advanced_box --stream-id long_process

<span class="token comment"># Close specific stream</span>
boxmux close-stream --box-id advanced_box --stream-id long_process

<span class="token comment"># Monitor stream status</span>
boxmux stream-status --box-id advanced_box</code>`),a(m),B(14),P(d,k)}const E=Object.freeze(Object.defineProperty({__proto__:null,default:A,metadata:g},Symbol.toStringTag,{value:"Module"}));export{E as _};
