app:
  libs:
    - lib/os_lib.sh
  layouts:
    - id: 'dashboard'
      root: true
      title: 'Advanced Dashboard Layout'
      selected_fg_color: 'bright_green'
      bg_color: 'bright_black'
      selected_bg_color: 'bright_black'
      title_fg_color: 'white'
      selected_title_fg_color: 'black'
      title_bg_color: 'black'
      selected_title_bg_color: 'bright_green'
      border_color: 'bright_white'
      selected_border_color: 'bright_green'
      menu_fg_color: 'bright_white'
      selected_menu_fg_color: 'black'
      menu_bg_color: 'bright_black'
      selected_menu_bg_color: 'bright_green'
      children:
        - id: 'header'
          title: 'My Awesome Dashboard'
          position:
            x1: 0%
            y1: 2%
            x2: 100%
            y2: 7%
          border: false
          children:
            - id: 'title'
              title: 'Dashboard Title'
              position:
                x1: 2%
                y1: 0%
                x2: 30%
                y2: 100%
              border: true
              content: 'My Awesome Dash'
              refresh_interval: 3000
            - id: 'status'
              title: 'Status'
              position:
                x1: 70%
                y1: 0%
                x2: 98%
                y2: 100%
              border: true
              content: 'Status Running'
        - id: 'menuA'
          title: 'Action Menu'
          position:
            x1: 5%
            y1: 10%
            x2: 20%
            y2: 90%
          tab_order: 1
          redirect_output: 'status'
          on_keypress:
            a:
              - echo 'Key A pressed'
            b:
              - echo 'Key B pressed'
          choices:
            - id: 'menuA1'
              content: 'Item A1'
              script:
                - echo 'Item A1'
              redirect_output: 'status'
            - id: 'menuA2'
              content: 'Item A2'
              script:
                - echo 'Item A2'
              redirect_output: 'title'
            - id: 'menuA3'
              content: 'Item A3'
              script:
                - echo 'Item A3'
              redirect_output: 'status'
            - id: 'menuA4'
              content: 'Item A4'
              script:
                - echo 'Item A4'
              redirect_output: 'status'
            - id: 'menuA5'
              content: 'Item A5'
              script:
                - echo 'Item A5'
              redirect_output: 'status'
        - id: 'content'
          title: 'Content Area'
          position:
            x1: 25%
            y1: 10%
            x2: 90%
            y2: 90%
          border: false
          children:
            - id: 'top_charts'
              title: 'Top Charts'
              position:
                x1: 0%
                y1: 0%
                x2: 100%
                y2: 50%
              border: true
              children:
                - id: 'chart1'
                  title: 'CPU Usage'
                  position:
                    x1: 2%
                    y1: 5%
                    x2: 48%
                    y2: 45%
                  tab_order: 2
                  refresh_interval: 1000
                  script:
                    - >
                      echo -e "Time,Value\n1,$((RANDOM % 100 + 100))\n2,$((RANDOM % 100 + 100))\n3,$((RANDOM % 100 + 100))\n4,$((RANDOM % 100 + 100))\n5,$((RANDOM % 100 + 100))" > /tmp/data_line.csv;
                      gnuplot -e "set terminal dumb size 80, 15; set style data lines; set datafile separator ','; plot '/tmp/data_line.csv' using 1:2 title 'CPU Usage' with linespoints; pause -1";
                      rm /tmp/data_line.csv
                - id: 'chart2'
                  title: 'Memory Usage'
                  position:
                    x1: 52%
                    y1: 5%
                    x2: 98%
                    y2: 45%
                  tab_order: 3
                  refresh_interval: 1500
                  script:
                    - >
                      echo -e "Time,Value\n1,$((RANDOM % 100 + 100))\n2,$((RANDOM % 100 + 100))\n3,$((RANDOM % 100 + 100))\n4,$((RANDOM % 100 + 100))\n5,$((RANDOM % 100 + 100))" > /tmp/data_line.csv;
                      gnuplot -e "set terminal dumb size 80, 15; set style data lines; set datafile separator ','; plot '/tmp/data_line.csv' using 1:2 title 'Memory Usage' with linespoints; pause -1";
                      rm /tmp/data_line.csv
                - id: 'chart3'
                  title: 'Network Traffic'
                  position:
                    x1: 2%
                    y1: 50%
                    x2: 48%
                    y2: 90%
                  tab_order: 4
                  refresh_interval: 2000
                  script:
                    - >
                      echo -e "Time,Value\n1,$((RANDOM % 100 + 100))\n2,$((RANDOM % 100 + 100))\n3,$((RANDOM % 100 + 100))\n4,$((RANDOM % 100 + 100))\n5,$((RANDOM % 100 + 100))" > /tmp/data_line.csv;
                      gnuplot -e "set terminal dumb size 80, 15; set style data lines; set datafile separator ','; plot '/tmp/data_line.csv' using 1:2 title 'Network Traffic' with linespoints; pause -1";
                      rm /tmp/data_line.csv
                - id: 'chart4'
                  title: 'Disk I/O'
                  position:
                    x1: 52%
                    y1: 50%
                    x2: 98%
                    y2: 90%
                  tab_order: 5
                  refresh_interval: 2500
                  script:
                    - >
                      echo -e "Time,Value\n1,$((RANDOM % 100 + 100))\n2,$((RANDOM % 100 + 100))\n3,$((RANDOM % 100 + 100))\n4,$((RANDOM % 100 + 100))\n5,$((RANDOM % 100 + 100))" > /tmp/data_line.csv;
                      gnuplot -e "set terminal dumb size 80, 15; set style data lines; set datafile separator ','; plot '/tmp/data_line.csv' using 1:2 title 'Disk I/O' with linespoints; pause -1";
                      rm /tmp/data_line.csv
            - id: 'logs'
              title: 'Logs'
              position:
                x1: 0%
                y1: 55%
                x2: 100%
                y2: 100%
              border: true
              children:
                - id: 'system_logs'
                  title: 'System Logs'
                  position:
                    x1: 2%
                    y1: 5%
                    x2: 48%
                    y2: 45%
                  tab_order: 6
                  script:
                    - log show --predicate 'eventMessage contains "Error"' --info --last 1m
                - id: 'application_logs'
                  title: 'Application Logs'
                  position:
                    x1: 52%
                    y1: 5%
                    x2: 98%
                    y2: 45%
                  tab_order: 7
                  script:
                    - tail -n 20 /var/log/install.log
                - id: 'security_logs'
                  title: 'Security Logs'
                  position:
                    x1: 2%
                    y1: 50%
                    x2: 48%
                    y2: 90%
                  tab_order: 8
                  script:
                    - tail -n 20 /var/log/wifi.log
                - id: 'custom_logs'
                  title: 'Custom Logs'
                  position:
                    x1: 52%
                    y1: 50%
                    x2: 98%
                    y2: 90%
                  tab_order: 9
                  script:
                    - tail -n 20 /var/log/system.log
        - id: 'footer'
          title: 'Footer'
          position:
            x1: 2%
            y1: 93%
            x2: 98%
            y2: 98%
          script:
            - date
