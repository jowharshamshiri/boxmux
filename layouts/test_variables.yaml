app:
  variables:
    APP_NAME: "Variable System Demo"
    ENVIRONMENT: "development"
    DEFAULT_USER: "admin"
    LOG_LEVEL: "debug"
    
  layouts:
    - id: 'variable_showcase'
      root: true
      title: '${APP_NAME} - ${ENVIRONMENT}'
      children:
        # Environment status panel
        - id: 'environment_info'
          title: 'Environment Information'
          position: {x1: 2%, y1: 2%, x2: 48%, y2: 30%}
          variables:
            PANEL_TYPE: "info"
          content: |
            Environment: ${ENVIRONMENT}
            App Name: ${APP_NAME}
            Panel Type: ${PANEL_TYPE}
            Log Level: ${LOG_LEVEL}
            Current User: ${USER:admin}
            Home Directory: ${HOME:/tmp}
          
        # Server monitoring section
        - id: 'server_monitoring'
          title: 'Server Monitoring'
          position: {x1: 52%, y1: 2%, x2: 98%, y2: 32%}
          variables:
            MONITOR_TYPE: "system"
            REFRESH_RATE: "5"
          script:
            - "echo \"=== ${MONITOR_TYPE} Monitor ===\""
            - "echo \"Environment: ${ENVIRONMENT}\""
            - "echo \"Refresh Rate: ${REFRESH_RATE}s\""
            - "echo \"Timestamp: $(date '+%H:%M:%S')\""
            - "echo \"CPU Usage: $(top -l 1 | awk '/CPU usage/ {print $3}' | cut -d% -f1 || echo 'N/A')%\""
            - "echo \"Memory: $(vm_stat | awk '/free/ {free=$3} /inactive/ {inactive=$3} END {print free+inactive\" pages free\"}' || echo 'N/A')\""
          refresh_interval: 5000
          
        # Service tier - demonstrates hierarchy
        - id: 'service_tier'
          title: 'Service Tier Management'
          position: {x1: 2%, y1: 35%, x2: 98%, y2: 70%}
          variables:
            TIER_NAME: "application"
            DEFAULT_PORT: "8080"
          children:
            # Web services
            - id: 'web_services'
              title: 'Web Services (${TIER_NAME})'
              position: {x1: 2%, y1: 5%, x2: 48%, y2: 95%}
              variables:
                SERVICE_GROUP: "frontend"
                DEFAULT_PORT: "80"  # Overrides parent DEFAULT_PORT
              children:
                - id: 'nginx_service'
                  title: '${SERVICE_GROUP} - nginx'
                  position: {x1: 5%, y1: 10%, x2: 95%, y2: 45%}
                  variables:
                    SERVICE_NAME: "nginx"
                    PORT: "443"  # Overrides DEFAULT_PORT
                  content: |
                    Service: ${SERVICE_NAME}
                    Group: ${SERVICE_GROUP}
                    Tier: ${TIER_NAME}
                    Port: ${PORT}
                    Environment: ${ENVIRONMENT}
                  script:
                    - "echo \"Checking ${SERVICE_NAME} on port ${PORT}\""
                    - "echo \"Service group: ${SERVICE_GROUP}\""
                    - "echo \"Application tier: ${TIER_NAME}\""
                    - "echo \"Environment: ${ENVIRONMENT}\""
                    
                - id: 'apache_service'
                  title: '${SERVICE_GROUP} - apache'
                  position: {x1: 5%, y1: 55%, x2: 95%, y2: 90%}
                  variables:
                    SERVICE_NAME: "apache2"
                    # PORT not defined, will use parent DEFAULT_PORT (80)
                  script:
                    - "echo \"Service: ${SERVICE_NAME}\""
                    - "echo \"Group: ${SERVICE_GROUP}\""
                    - "echo \"Tier: ${TIER_NAME}\""
                    - "echo \"Port: ${PORT:80} (default from parent: ${DEFAULT_PORT})\""
                    - "echo \"Environment: ${ENVIRONMENT}\""
                    - "echo \"Status: $(echo 'Active (simulated)')\""
            
            # API services
            - id: 'api_services'
              title: 'API Services (${TIER_NAME})'
              position: {x1: 52%, y1: 5%, x2: 98%, y2: 95%}
              variables:
                SERVICE_GROUP: "backend"
                DEFAULT_MEMORY: "512Mi"
              children:
                - id: 'rest_api'
                  title: '${SERVICE_GROUP} - REST API'
                  position: {x1: 5%, y1: 10%, x2: 95%, y2: 45%}
                  variables:
                    SERVICE_NAME: "rest-api"
                    MEMORY_LIMIT: "1Gi"  # Overrides DEFAULT_MEMORY
                  content: |
                    Service: ${SERVICE_NAME}
                    Group: ${SERVICE_GROUP}
                    Tier: ${TIER_NAME}
                    Memory: ${MEMORY_LIMIT}
                    Port: ${PORT:80}
                    Environment: ${ENVIRONMENT}
                  choices:
                    - id: 'restart_service'
                      content: 'Restart ${SERVICE_NAME}'
                      script:
                        - "echo \"Restarting ${SERVICE_NAME} in ${ENVIRONMENT}\""
                        - "echo \"Service group: ${SERVICE_GROUP}\""
                        - "echo \"Memory limit: ${MEMORY_LIMIT}\""
                        
                - id: 'graphql_api'
                  title: '${SERVICE_GROUP} - GraphQL'
                  position: {x1: 5%, y1: 55%, x2: 95%, y2: 90%}
                  variables:
                    SERVICE_NAME: "graphql-api"
                    # MEMORY_LIMIT not defined, will use parent DEFAULT_MEMORY
                  content: |
                    Service: ${SERVICE_NAME}
                    Group: ${SERVICE_GROUP}
                    Tier: ${TIER_NAME}
                    Memory: ${MEMORY_LIMIT:512Mi}
                    Port: ${PORT:80}
                    Environment: ${ENVIRONMENT}
                  choices:
                    - id: 'check_schema'
                      content: 'Check ${SERVICE_NAME} Schema'
                      script:
                        - "echo \"Checking schema for ${SERVICE_NAME}\""
                        - "echo \"Environment: ${ENVIRONMENT}\""
                        - "echo \"Memory: ${MEMORY_LIMIT:512Mi} (using default)\""
                      redirect_output: 'schema_output'
                      
                    - id: 'show_variables'
                      content: 'Show All Variables'
                      script:
                        - "echo \"=== Variable Resolution Demo ===\""
                        - "echo \"SERVICE_NAME: ${SERVICE_NAME}\""
                        - "echo \"SERVICE_GROUP: ${SERVICE_GROUP}\""
                        - "echo \"TIER_NAME: ${TIER_NAME}\""
                        - "echo \"APP_NAME: ${APP_NAME}\""
                        - "echo \"ENVIRONMENT: ${ENVIRONMENT}\""
                        - "echo \"PORT (with default): ${PORT:8080}\""
                        - "echo \"MEMORY (with default): ${MEMORY_LIMIT:512Mi}\""
                        - "echo \"USER (env fallback): ${USER:admin}\""
                        - "echo \"UNDEFINED (with default): ${UNDEFINED_VAR:fallback_value}\""
                        - "echo \"================================\""
                      redirect_output: 'variable_debug'
                      
        # Output panels for redirected content
        - id: 'schema_output'
          title: 'Schema Check Output'
          position: {x1: 2%, y1: 72%, x2: 48%, y2: 98%}
          content: 'Schema check output will appear here...'
          
        - id: 'variable_debug'
          title: 'Variable Debug Output'
          position: {x1: 52%, y1: 72%, x2: 98%, y2: 98%}
          content: 'Variable debug output will appear here...'